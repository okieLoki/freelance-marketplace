version: "3.9"
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data

  mongodb:
    container_name: mongo_container
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./docker-volumes/mongo:/data/db

  mysql:
    container_name: mysql_container
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_DATABASE=jobber_auth
      - MYSQL_USER=uddeepta
      - MYSQL_PASSWORD=12345678
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql

  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=uddeepta
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=jobber_reviews
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13-rc-management-alpine
    environment: 
      - RABBITMQ_DEFAULT_USER=uddeepta
      - RABBITMQ_DEFAULT_PASS=12345678
    restart: always
    ports:
      # AMQP protocol
      - 5672:5672
      # Management UI
      - 15672:15672

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "false"
      discovery.type: single-node
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./docker-volumes/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.10.4
    restart: always
    environment:
      - ELASTICSEARCH_HOST=["http://elasticsearch_container:9200"]
    ports:
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./docker-volumes/kibana:/usr/share/kibana/data
    depends_on:
      - elasticsearch

  notifications: 
    container_name: notification_container
    build: 
      context: ../services/notification-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 8001:8001
    env_file: ../services/notification-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - CLIENT_URL=http://localhost:3000
      - RABBITMQ_ENDPOINT=amqp://uddeepta:12345678@rabbitmq_container:5672
      - SENDER_EMAIL=vince.lakin@ethereal.email
      - SENDER_EMAIL_PASSWORD=Rm85Cm1beGpPwrehVn
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - rabbitmq
      - elasticsearch

networks:
  elastic:
    name: elastic
